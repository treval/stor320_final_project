hour11 <- read_csv('https://raw.githubusercontent.com/idc9/stor390/master/data/bikes_2011.csv')
---
title: "Analysis 3 EDA"
author: "Trevor Levey"
date: "11/11/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# data from 2011
hour11 <- read_csv('https://raw.githubusercontent.com/idc9/stor390/master/data/bikes_2011.csv')
```
####Exploring the workingday variable
```{r}
ggplot(data = hour11) +
geom_boxplot(mapping = aes(x=factor(workingday), y=cnt))
is_wd <- hour11[hour11$workingday==1,]$cnt
not_wd <- hour11[!hour11$workingday==1,]$cnt
t.test(x=is_wd, y=not_wd)
#RESULT: Probably not great measure.
```
####Looking at temp variable
```{r}
ggplot(data = hour11) +
geom_hex(mapping=aes(x=temp, y=cnt))
ggplot(data = hour11 %>% filter(cnt<200)) +
geom_jitter(mapping=aes(x=temp, y=cnt))
#RESULT: Definitely something going on. Still densest below 200
```
####Looking at wind speed variable
```{r}
ggplot(data = hour11) +
geom_histogram(mapping=aes(x=windspeed), bins=30)
ggplot(data = hour11 %>% filter(windspeed<.5)) +
geom_jitter(mapping=aes(x=windspeed, y=cnt))
#RESULT: Looks to have little effect. Only drops off because there are fewer occurances of higher wind speeds.
```
####Looking at humidity variable
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt))
```
####Looking at month variable
```{r}
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
```
```{r}
t <- lm(cnt~hr^3, hour11)
```
hour11 <- read_csv('https://raw.githubusercontent.com/idc9/stor390/master/data/bikes_2011.csv')
ggplot(data = hour11) +
geom_boxplot(mapping = aes(x=factor(workingday), y=cnt))
is_wd <- hour11[hour11$workingday==1,]$cnt
not_wd <- hour11[!hour11$workingday==1,]$cnt
t.test(x=is_wd, y=not_wd)
ggplot(data = hour11) +
geom_boxplot(mapping = aes(x=factor(workingday), y=cnt))
ggplot(data = hour11) +
geom_boxplot(mapping = aes(x=factor(weekday), y=cnt))
workingday
ggplot(data = hour11) +
geom_boxplot(mapping = aes(x=factor(workingday), y=cnt))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt), color=factor(workingday))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt), color=factor(workingday))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt), color=factor(workday))
View(hour11)
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt), color=factor(hour11$workingday))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt), color=factor(hour11$workingday))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt, color=workingday))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt, color=factor(workingday)))
ggplot(data = hour11) +
geom_hex(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11) +
geom_point(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11) +
geom_histogram(mapping=aes(x=windspeed), bins=30)
ggplot(data = hour11 %>% filter(windspeed<.5)) +
geom_jitter(mapping=aes(x=windspeed, y=cnt))
ggplot(data = hour11 %>% filter(windspeed<.5)) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=hr, y=cnt, color=factor(mnth)))
ggplot(data=hour11) +
geom_point(mapping=aes(x=hr, y=cnt, color=factor(mnth)))
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=factor(mnth)))
geom_boxplot
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=hr, y=cnt, color=factor(mnth)))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt, color=hr)
ggplot(data=hour11) +
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt, color=hr))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt, color=factor(hr)))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt, color=hr))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=factor(mnth), y=cnt))
geom_boxplot
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt))
---
title: "Analysis 3 EDA"
author: "Trevor Levey"
date: "11/11/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# data from 2011
hour11 <- read_csv('https://raw.githubusercontent.com/idc9/stor390/master/data/bikes_2011.csv')
```
####Exploring the workingday variable
```{r}
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt, color=factor(workingday)))
is_wd <- hour11[hour11$workingday==1,]$cnt
not_wd <- hour11[!hour11$workingday==1,]$cnt
t.test(x=is_wd, y=not_wd)
```
####Looking at temp variable
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11 %>% filter(cnt<200)) +
geom_jitter(mapping=aes(x=temp, y=cnt))
#RESULT: Definitely something going on. Still densest below 200
```
####Looking at wind speed variable
```{r}
ggplot(data = hour11) +
geom_histogram(mapping=aes(x=windspeed), bins=30)
ggplot(data = hour11 %>% filter(windspeed<.5)) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
#RESULT: Looks to have little effect. Only drops off because there are fewer occurances of higher wind speeds.
```
####Looking at humidity variable
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt))
```
####Looking at month variable
```{r}
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
```
```{r}
t <- lm(cnt~hr^3, hour11)
```
t.test(x=is_wd, y=not_wd)
View(hour11)
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt, color=factor(workingday)))
is_wd <- hour11[hour11$workingday==1,]$cnt
not_wd <- hour11[!hour11$workingday==1,]$cnt
t.test(x=is_wd, y=not_wd)
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt, color=factor(workingday)))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11 %>% filter(cnt<200)) +
geom_jitter(mapping=aes(x=temp, y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
lm(temp~cnt) %>% summary(
)
lm(temp~cnt) %>% summary()
lm(temp~cnt, hour11) %>% summary()
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=temp, y=cnt))
ggplot(data = hour11) +
geom_point(mapping = aes(x=hr, y=cnt, color=factor(workingday)))
not_wd <- hour11[!hour11$workingday==1,]$cnt
is_wd <- hour11[hour11$workingday==1,]$cnt
not_wd <- hour11[!hour11$workingday==1,]$cnt
t.test(x=is_wd, y=not_wd)
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=temp, y=cnt))
ggplot(data = hour11) +
geom_histogram(mapping=aes(x=windspeed), bins=30)
ggplot(data = hour11 %>% filter(windspeed<.5)) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
ggplot(data = hour11 %>% filter(windspeed)) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
ggplot(data = hour11) +
geom_jitter(mapping = aes(x=hr, y=cnt, color=factor(workingday)))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=workday, size=temp))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=workingday, size=temp))
temp
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
ggplot(data = hour11) +
geom_histogram(mapping=aes(x=windspeed), bins=30)
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt, color=workingday))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt, color=factor(workingday)))
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
test <- hour11 %>%
group_by(mnth) %>%
summarise(mean=mean(cnt, na.rm=TRUE))
View(test)
ggplot(data=test) +
geom_smooth(mapping=aes(x=factor(mnth), y=mean))
ggplot(data=test) +
geom_line(mapping=aes(x=factor(mnth), y=mean))
ggplot(data=test) +
geom_curve(mapping=aes(x=factor(mnth), y=mean))
ggplot(data=test) +
geom_curve(mapping=aes(xend=factor(mnth), yend=mean))
ggplot(data=test) +
geom_point(mapping=aes(xend=factor(mnth), yend=mean))
ggplot(data=test) +
geom_point(mapping=aes(x=factor(mnth), y=mean))
?geom_point
ggplot(data=test) +
geom_point(mapping=aes(x=mnth, y=mean))
factor
ggplot(data=test) +
geom_point(mapping=aes(x=factor(mnth), y=mean))
test <- hour11 %>%
group_by(mnth) %>%
summarise(mean=mean(cnt, na.rm=TRUE))
ggplot(data=test) +
geom_point(mapping=aes(x=factor(mnth), y=mean))
ggplot(data=hour11) +
geom_point(mapping=aes(x=factor(mnth), y=cnt))
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=factor(mnth), y=cnt))
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=factor(mnth), y=cnt)) +
geom_smooth()
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=factor(mnth), y=cnt)) +
geom_smooth(mapping=aes(x=factor(mnth), y=cnt))
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=factor(mnth), y=cnt)) +
geom_smooth(mapping=aes(x=mnth, y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt, color=factor(workingday))) +
geom_smooth(mapping=aes(x=hum, y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed)) +
geom_smooth(mapping=aes(x=hr, y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=temp, y=cnt)) +
geom_smooth(mapping=aes(x=temp, y=cnt))
ggplot(data = hour11) +
geom_jitter(mapping = aes(x=hr, y=cnt, color=factor(workingday))) +
geom_smooth(mapping=aes(x=hr, y=cnt))
hour11 %>%
group_by(weathersit) %>%
summarise(
weather_occurances=n(),
mean_bikes_rented=mean(cnt, na.rm=TRUE),
max_bikes_rented=max(cnt, na.rm=TRUE)
) %>%
View()
hour11 %>%
group_by(weathersit) %>%
summarise(
weather_occurances=n(),
mean_bikes_rented=mean(cnt, na.rm=TRUE),
max_bikes_rented=max(cnt, na.rm=TRUE),
min_bikes_rented=min(cnt, na.rm=TRUE)
) %>%
View()
hour11 %>%
group_by(weathersit) %>%
summarise(
weather_occurances=n(),
mean_bikes_rented=mean(cnt, na.rm=TRUE),
median_bikes_rented=median(cnt, na.rm=TRUE),
max_bikes_rented=max(cnt, na.rm=TRUE),
min_bikes_rented=min(cnt, na.rm=TRUE)
) %>%
View()
hour11 %>%
group_by(weathersit) %>%
summarise(
weather_occurances=n(),
mean_bikes_rented=mean(cnt, na.rm=TRUE),
median_bikes_rented=median(cnt, na.rm=TRUE)
) %>%
View()
hour11 %>%
group_by(weathersit) %>%
summarise(
weather_occurances=n(),
mean_bikes_rented=mean(cnt, na.rm=TRUE),
median_bikes_rented=median(cnt, na.rm=TRUE),
mean_casual_rentals=mean(casual, na.rm=TRUE),
mean_registered_rentals=mean(registered, na.rm=TRUE)
) %>%
View()
---
title: "Analysis 3 EDA"
author: "Trevor Levey"
date: "11/11/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# data from 2011
hour11 <- read_csv('https://raw.githubusercontent.com/idc9/stor390/master/data/bikes_2011.csv')
```
####Exploring the workingday variable
```{r}
ggplot(data = hour11) +
geom_jitter(mapping = aes(x=hr, y=cnt, color=factor(workingday))) +
geom_smooth(mapping=aes(x=hr, y=cnt))
```
```{r}
is_wd <- hour11[hour11$workingday==1,]$cnt
not_wd <- hour11[!hour11$workingday==1,]$cnt
t.test(x=is_wd, y=not_wd)
```
####Looking at temp variable
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=temp))
```
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=temp, y=cnt)) +
geom_smooth(mapping=aes(x=temp, y=cnt))
```
####Looking at wind speed variable
```{r}
ggplot(data = hour11) +
geom_histogram(mapping=aes(x=windspeed), bins=30)
```
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hr, y=cnt, color=windspeed))
```
####Looking at humidity variable
```{r}
ggplot(data = hour11) +
geom_jitter(mapping=aes(x=hum, y=cnt, color=factor(workingday))) +
geom_smooth(mapping=aes(x=hum, y=cnt))
```
####Looking at weathersit variable
```{r}
hour11 %>%
group_by(weathersit) %>%
summarise(
weather_occurances=n(),
mean_bikes_rented=mean(cnt, na.rm=TRUE),
median_bikes_rented=median(cnt, na.rm=TRUE),
mean_casual_rentals=mean(casual, na.rm=TRUE),
mean_registered_rentals=mean(registered, na.rm=TRUE)
)
```
####Looking at month variable
```{r}
ggplot(data=hour11) +
geom_boxplot(mapping=aes(x=factor(mnth), y=cnt))
```
```{r}
ggplot(data=hour11) +
geom_jitter(mapping=aes(x=factor(mnth), y=cnt)) +
geom_smooth(mapping=aes(x=mnth, y=cnt))
```
healthcare <- read_csv("tidied_data.csv")
Covered_By_State <- read_csv("by_state.csv")
Covered_By_Region <- read_csv("by_region.csv")
Cost_By_Disease <- read_csv("by_disease.csv")
library(tidyverse)
library(ggplot2)
healthcare <- read_csv("tidied_data.csv")
Covered_By_State <- read_csv("by_state.csv")
Covered_By_Region <- read_csv("by_region.csv")
Cost_By_Disease <- read_csv("by_disease.csv")
library(tidyverse)
#Tidy original dataset
healthcare <- read_csv("app_data.csv")
healthcare$`Average Covered Charges` <- gsub("\\$", "", healthcare$`Average Covered Charges`) %>% as.numeric()
healthcare$`Average Medicare Payments` <- gsub("\\$", "", healthcare$`Average Medicare Payments`) %>% as.numeric()
healthcare$`Average Total Payments` <- gsub("\\$", "", healthcare$`Average Total Payments`) %>% as.numeric()
healthcare <- healthcare %>% separate(`DRG Definition`, into=c("DRG_id","DRG_Def"), sep="-")
healthcare <- healthcare %>% arrange(`Provider State`)
healthcare <- mutate(healthcare, Total_Covered_Charges = `Average Covered Charges` * `Total Discharges`)
healthcare <- mutate(healthcare, `Total Payments` = `Average Total Payments` * `Total Discharges`)
write_csv(healthcare, "./tidied_data.csv")
#state aggregation
healthcare <- mutate(healthcare, Total_Covered_Charges = `Average Covered Charges` * `Total Discharges`)
healthcare <- mutate(healthcare, `Total Payments` = `Average Total Payments` * `Total Discharges`)
Covered_By_State <- healthcare %>%
group_by(`Provider State`) %>%
select(`Provider State`, `Total Discharges`, `Total Payments`, Total_Covered_Charges) %>%
summarise(
`State Total Covered` = sum(`Total_Covered_Charges`),
`State Total Discharges` = sum(`Total Discharges`),
`State Average Covered` = `State Total Covered`/`State Total Discharges`,
`State Total Payment` = sum(`Total Payments`),
`State Average Payment` = `State Total Payment`/`State Total Discharges`,
`State Average Total Charges` = `State Average Covered` + `State Average Payment`,
`State Covered Ratio` = `State Average Covered` / `State Average Total Charges`
)
write_csv(Covered_By_State, "./by_state.csv")
#region aggregation
#West: WA,OR,CA,NV,ID,UT,MT,WY,CO,AZ,NM,AK,HI
west_states <- c("WA", "OR", "CA", "NV", "ID", "UT", "MT", "WY", "CO", "AZ", "NM", "AK", "HI")
#Midwest: ND,SD,NE,KS,MN,IA,MO,WI,IL,IN,MI,OH
midwest_states <- c("ND", "SD", "NE", "KS", "MN", "IA", "MO", "WI", "IL", "IN", "MI", "OH")
#Northeast: NY,PA,NH,VT,ME,MA,RI,CT,NJ
northeast_states <- c("NY", "PA", "NH", "VT", "ME", "MA", "RI", "CT", "NJ")
#South: OK,TX,AR,LA,MS,TN,KY,AL,WV,DE,MD,DC,VA,NC,SC,GA,FL
south_states <- c("OK", "TX", "AR", "LA", "MS", "TN", "KY", "AL", "WV", "DE", "MD", "DC", "VA", "NC", "SC", "GA", "FL")
med_cost_west <- filter(Covered_By_State, `Provider State` %in% west_states)
med_cost_west <- mutate(med_cost_west, Region="West")
west_average <- sum(med_cost_west$`State Total Payment`)/sum(med_cost_west$`State Total Discharges`)
Covered_West <- filter(Covered_By_State, `Provider State` %in% west_states)
Covered_West <- mutate(Covered_West, Region="West")
Average_Covered_West = sum(Covered_West$`State Total Covered`)/sum(Covered_West$`State Total Discharges`)
Total_Charges_West = Average_Covered_West + west_average
Covered_West_Ratio = Average_Covered_West/Total_Charges_West
med_cost_midwest <- filter(Covered_By_State, `Provider State` %in% midwest_states)
med_cost_midwest <- mutate(med_cost_midwest, Region="Midwest")
midwest_average <- sum(med_cost_midwest$`State Total Payment`)/sum(med_cost_midwest$`State Total Discharges`)
Covered_Midwest <- filter(Covered_By_State, `Provider State` %in% midwest_states)
Covered_Midwest <- mutate(Covered_Midwest, Region="Midwest")
Average_Covered_Midwest = sum(Covered_Midwest$`State Total Covered`)/sum(Covered_Midwest$`State Total Discharges`)
Total_Charges_Midwest = Average_Covered_Midwest + midwest_average
Covered_Midwest_Ratio = Average_Covered_Midwest/Total_Charges_Midwest
med_cost_northeast <- filter(Covered_By_State, `Provider State` %in% northeast_states)
med_cost_northeast <- mutate(med_cost_northeast, Region="Northeast")
northeast_average <- sum(med_cost_northeast$`State Total Payment`)/sum(med_cost_northeast$`State Total Discharges`)
Covered_Northeast <- filter(Covered_By_State, `Provider State` %in% northeast_states)
Covered_Northeast <- mutate(Covered_Northeast, Region="Northeast")
Average_Covered_Northeast = sum(Covered_Northeast$`State Total Covered`)/sum(Covered_Northeast$`State Total Discharges`)
Total_Charges_Northeast = Average_Covered_Northeast + northeast_average
Covered_Northeast_Ratio = Average_Covered_Northeast/Total_Charges_Northeast
med_cost_south <- filter(Covered_By_State, `Provider State` %in% south_states)
med_cost_south <- mutate(med_cost_south, Region="South")
south_average <- sum(med_cost_south$`State Total Payment`)/sum(med_cost_south$`State Total Discharges`)
Covered_South <- filter(Covered_By_State, `Provider State` %in% south_states)
Covered_South  <- mutate(Covered_South , Region="South")
Average_Covered_South = sum(Covered_South$`State Total Covered`)/sum(Covered_South$`State Total Discharges`)
Total_Charges_South = Average_Covered_South + south_average
Covered_South_Ratio = Average_Covered_South/Total_Charges_South
Regions <- c("West", "Midwest", "Northeast", "South")
Average_Payment <- c(west_average, midwest_average, northeast_average, south_average)
Average_Covered <- c(Average_Covered_West, Average_Covered_Midwest, Average_Covered_Northeast, Average_Covered_South)
Covered_Ratio <- c(Covered_West_Ratio, Covered_Midwest_Ratio, Covered_Northeast_Ratio, Covered_South_Ratio)
Covered_By_Region <- data.frame(Regions, Average_Payment, Average_Covered, Covered_Ratio)
write_csv(Covered_By_Region, "./by_region.csv")
#disease aggregation
disease_country <- healthcare %>%
group_by(DRG_id) %>%
select(DRG_id, `Total Discharges`, `Total Payments`) %>%
summarise(
`Country Total Payments` = sum(`Total Payments`),
`Country Total Discharges` = sum(`Total Discharges`),
`Country Average Payment` = `Country Total Payments`/`Country Total Discharges`
)
write_csv(disease_country, "./by_disease.csv")
healthcare <- read_csv("tidied_data.csv")
Covered_By_State <- read_csv("by_state.csv")
Covered_By_Region <- read_csv("by_region.csv")
Cost_By_Disease <- read_csv("by_disease.csv")
setwd("~/Desktop/stor320_final_project/Shiny App")
healthcare <- read_csv("tidied_data.csv")
Covered_By_State <- read_csv("by_state.csv")
Covered_By_Region <- read_csv("by_region.csv")
Cost_By_Disease <- read_csv("by_disease.csv")
View(healthcare)
View(Covered_By_State)
View(Covered_By_Region)
View(Cost_By_Disease)
runExample("01_hello")
if (!require('shiny')) install.packages("shiny")
runExample("01_hello")
head(healthcare)
runApp()
